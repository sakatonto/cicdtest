---
- hosts: localhost
  vars:
    worker_count: "{{ worker_count | default(3) | int }}"
    ansible_python_interpreter: /opt/homebrew/bin/python@3.10/bin/python3

  tasks:
    - name: Check and delete existing master and worker nodes if they exist
      shell: |
        multipass list --format csv | awk -F',' 'NR>1 {print $1}' | grep -E 'k3s-master|k3s-worker-' | xargs -r multipass delete
        multipass purge
      ignore_errors: true

    - name: Provision master node (k3s-master)
      shell: |
        multipass launch --name k3s-master --cpus 2 --memory 4G --disk 20G
      register: master_provision

    - name: Provision worker nodes
      vars:
        worker_list: "{{ range(1, (worker_count | int) + 1) | list }}"
      loop: "{{ worker_list }}"
      shell: |
        multipass launch --name k3s-worker-{{ '%02d' | format(item) }} --cpus 1 --memory 1G --disk 4G
      register: worker_provision


    - name: Wait for instances to be ready
      shell: multipass list
      register: instances
      until: instances.stdout.find('Running') != -1
      retries: 10
      delay: 5

    - name: Get master node IP
      shell: multipass info k3s-master | grep IPv4 | awk '{print $2}'
      register: master_ip
      changed_when: false

    - name: Display master IP
      debug:
        msg: "Master node IP: {{ master_ip.stdout }}"

    - name: Get worker node IPs
      vars:
        worker_list: "{{ range(1, (worker_count | int) + 1) | list }}"
      loop: "{{ worker_list }}"
      shell: multipass info k3s-worker-{{ '%02d' | format(item) }} | grep IPv4 | awk '{print $2}'
      register: worker_ips
      changed_when: false

    - name: Display worker node IPs
      debug:
        msg: "Worker node IPs: {{ worker_ips.results | map(attribute='stdout') | list }}"

    - name: Install k3s on master
      shell: |
        multipass exec k3s-master -- bash -c "curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC='--write-kubeconfig-mode 644 --disable traefik --disable-network-policy --disable servicelb' sh -"
      register: master_k3s

    - name: Get K3s master token
      shell: multipass exec k3s-master -- sudo cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      changed_when: false

    - name: Install k3s agent on workers
      vars:
        worker_list: "{{ range(1, (worker_count | int) + 1) | list }}"
      loop: "{{ worker_list }}"
      shell: |
        multipass exec k3s-worker-{{ '%02d' | format(item) }} -- bash -c "curl -sfL https://get.k3s.io | K3S_URL=https://{{ master_ip.stdout }}:6443 K3S_TOKEN={{ k3s_token.stdout }} sh -"
      register: worker_k3s

    - name: Verify cluster nodes
      shell: multipass exec k3s-master -- kubectl get nodes
      register: nodes_status

    - name: Display K3s cluster nodes
      debug:
        msg: "{{ nodes_status.stdout }}"

    - name: Retrieve Kubeconfig from master
      command: multipass exec k3s-master -- sudo cat /etc/rancher/k3s/k3s.yaml
      register: kubeconfig_output

    - name: Ensure .kube directory exists
      file:
        path: ~/.kube
        state: directory
        mode: '0700'

    - name: Write Kubeconfig to file
      copy:
        content: "{{ kubeconfig_output.stdout }}"
        dest: ~/.kube/config
        mode: '0600'

    - name: Update Kubeconfig with master IP
      lineinfile:
        path: ~/.kube/config
        regexp: '^(\s*server:\s*)https://.*'
        line: "    server: https://{{ master_ip.stdout }}:6443"
        backup: yes

    - name: Display final Kubeconfig
      command: cat ~/.kube/config
      register: kubeconfig_final

    - debug:
        var: kubeconfig_final.stdout
